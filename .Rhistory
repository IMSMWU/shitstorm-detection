install.packages("Rfacebook")
library(Rfacebook)
page <- getPage("oehwu", token, n = 5000, since='2015/01/01', until='2015/12/31')
library(Rfacebook)
token <- 'EAACEdEose0cBABtSF3Qcrle1IvU9awv20yAZAYMSweNXwOBUQnjeLm4L4TNwHskggM7NQQhPGdIyqLIdlTwBoVanq1ELr7ZCTMd6ijku8DDVeKvcotNfAPA7Gh0TxdP2yvGZCvEJo3AoVI6SoBZAEVJVyWF4N6BzpHqiZCgHBx5NZA3aEZAbvZCaXjrvuZBH9TD8ZD'
page <- getPage("oehwu", token, n = 5000, since='2015/01/01', until='2015/12/31')
?getPage
page <- getPage("oehwu", token, n = 5000, since='2017/01/01', until='2017/02/01')
View(page)
page <- getPage("BallderWU", token, n = 5000, since='2017/01/01', until='2017/02/01')
for(id in page$id){
comments <- getPost(id, token, n = 1000, likes = TRUE, comments = TRUE)
comments
}
comments <- list()
for(id in page$id){
comment <- getPost(id, token, n = 1000, likes = TRUE, comments = TRUE)
comments <- list(comments, comment)
}
getPost("139124232853755_968334219932748", token, n = 1000, likes = TRUE, comments = TRUE)
test <- getPost("139124232853755_968334219932748", token, n = 1000, likes = TRUE, comments = TRUE)
str(test)
test <- getPost("139124232853755_970027159763454", token, n = 1000, likes = TRUE, comments = TRUE)
str(test)
test <- getPost("139124232853755_970027159763454", token, n = 1000, likes = TRUE, comments = TRUE)
str(test$comments)
?rbind
comments <- data.frame(row.names = c("from_id", "from_name", "message"))
loadComments <- function(id){
all_comments <- data.frame(row.names = c("from_id", "from_name", "message"))
for(id in page$id){
post_comments <- getPost(id, token, n = 1000, likes = FALSE, comments = TRUE)$comments
all_comments <- rbind(all_comments, post_comments)
}
all_comments
}
loadComments("139124232853755_970027159763454")
all_comments <- lapply(page$id, "loadComments")
all_comments
all_comments <- data.frame(row.names = c("from_id", "from_name", "message"))
for(post in page$id) {
post_comments <- loadComments(post)
all_comments <- rbind(all_comments, post_comments)
}
View(post_comments)
loadComments <- function(page, token, since, until){
all_comments <- data.frame(row.names = c("from_id", "from_name", "message"))
## load posts
page <- getPage(page, token, n = 5000, since, until)
for(id in page$id){
post_comments <- getPost(id, token, n = 1000, likes = FALSE, comments = TRUE)$comments
all_comments <- rbind(all_comments, post_comments)
}
all_comments
}
loadComments("BallderWU", token, '2017/01/01', '2017/02/01')
cmts <- loadComments("BallderWU", token, '2017/01/01', '2017/02/01')
View(cmts)
View(page)
intall.packages("library(syuzhet)")
intall.packages("syuzhet")
install.packages("syuzhet")
library(syuzhet)
lapply(cmts$message, "get_sentiment")
loadComments <- function(page, token, since, until){
all_comments <- data.frame(row.names = c("from_id", "from_name", "message"))
## load posts
page <- getPage(page, token, n = 5000, since, until)
for(id in page$id){
post_comments <- getPost(id, token, n = 1000, likes = FALSE, comments = TRUE)$comments
post_comments$message <- iconv(post_comments$message, 'UTF-8', 'ASCII')
all_comments <- rbind(all_comments, post_comments)
}
all_comments
}
cmts <- loadComments("BallderWU", token, '2017/01/01', '2017/02/01')
lapply(cmts$message, "get_sentiment")
loadComments <- function(page, token, since, until){
all_comments <- data.frame(row.names = c("from_id", "from_name", "message"))
## load posts
page <- getPage(page, token, n = 5000, since, until)
for(id in page$id){
post_comments <- getPost(id, token, n = 1000, likes = FALSE, comments = TRUE)$comments
post_comments$message <- iconv(enc2utf8(post_comments$message), sub = "byte") #iconv(post_comments$message, 'UTF-8', 'ASCII')
all_comments <- rbind(all_comments, post_comments)
}
all_comments
}
# oehwu
cmts <- loadComments("BallderWU", token, '2017/01/01', '2017/02/01')
loadComments <- function(page, token, since, until){
all_comments <- data.frame(row.names = c("from_id", "from_name", "message"))
## load posts
page <- getPage(page, token, n = 5000, since, until)
for(id in page$id){
post_comments <- getPost(id, token, n = 1000, likes = FALSE, comments = TRUE)$comments
post_comments$message <- iconv(post_comments$message, sub = "byte") #iconv(post_comments$message, 'UTF-8', 'ASCII')
all_comments <- rbind(all_comments, post_comments)
}
all_comments
}
# oehwu
cmts <- loadComments("BallderWU", token, '2017/01/01', '2017/02/01')
lapply(cmts$message, "get_sentiment")
analyse_sentiment <- function (text){
a <- get_sentiment(text, method = "afinn")
s <- get_sentiment(text, method = "syuzhet")
b <- get_sentiment(text, method = "bing")
n <- get_sentiment(text, method = "nrc")
m <- mean(c(a, s, b, n), na.rm=TRUE)
if (is.numeric(m) & !is.na(m)){
return(m)
}
return(0.0)
}
get_sentiment <- function (text){
a <- syuzhet::get_sentiment(text, method = "afinn")
s <- syuzhet::get_sentiment(text, method = "syuzhet")
b <- syuzhet::get_sentiment(text, method = "bing")
n <- syuzhet::get_sentiment(text, method = "nrc")
m <- mean(c(a, s, b, n), na.rm=TRUE)
if (is.numeric(m) & !is.na(m)){
return(m)
}
return(0.0)
}
lapply(cmts$message, "get_sentiment")
cmts$sentiment <- lapply(cmts$message, "get_sentiment")
cmts$weighted_sentiment <- cmts$sentiment * cmts$likes_count
cmts$weighted_sentiment <- (cmts$sentiment * cmts$likes_count)
str(cmts$sentiment)
str(cmts$likes_count)
cmts <- loadComments("BallderWU", token, '2016/06/01', '2017/02/01')
cmts$sentiment <- lapply(cmts$message, "get_sentiment")
cmts <- loadComments("BallderWU", token, '2016/01/01', '2017/02/01')
cmts$sentiment <- lapply(cmts$message, "get_sentiment")
get_sentiment("test")
syuzhet::get_sentiment("text", method = "afinn")
get_sentiment(cmts$message)
str(cmts$message)
str(lapply(cmts$message, "get_sentiment"))
str(cmts$message[1])
str(cmts$message[2])
str(sapply(cmts$message, "get_sentiment"))
cmts$sentiment <- sapply(cmts$message, "get_sentiment")
cmts$weighted_sentiment <- (cmts$sentiment * cmts$likes_count)
cmts$weighted_sentiment <- (cmts$sentiment * cmts$likes_count)
library(ggplot2)
install.packages("ggplot2")
loadComments <- function(page, token, since, until){
all_comments <- data.frame(row.names = c("from_id", "from_name", "message"))
## load posts
page <- getPage(page, token, n = 5000, since, until)
for(id in page$id){
post_comments <- getPost(id, token, n = 1000, likes = FALSE, comments = TRUE)$comments
post_comments$message <- iconv(post_comments$message, sub = "byte") #iconv(post_comments$message, 'UTF-8', 'ASCII')
post_comments$date <- sapply(post_comments$created_time, function(x) as.POSIXct(x, format = "%Y-%m-%dT%H:%M:%S+0000", tz = "GMT"))
all_comments <- rbind(all_comments, post_comments)
}
all_comments
}
# oehwu
cmts <- loadComments("BallderWU", token, '2016/01/01', '2017/02/01')
ggplot(cmts, aes(x = date, y = weighted_sentiment)) + geom_line() +
theme_bw() + theme(axis.title.x = element_blank())
ggplot2::ggplot(cmts, aes(x = date, y = weighted_sentiment)) + geom_line() +
theme_bw() + theme(axis.title.x = element_blank())
ggplot2::ggplot(cmts, ggplot2::aes(x = date, y = weighted_sentiment)) + geom_line() +
theme_bw() + theme(axis.title.x = element_blank())
library(ggplot2)
ggplot(cmts, aes(x = date, y = weighted_sentiment)) + geom_line() +
theme_bw() + theme(axis.title.x = element_blank())
ggplot(cmts, aes(x = date, y = weighted_sentiment)) + geom_line() +
theme_bw() + theme(axis.title.x = element_blank())
cmts$weighted_sentiment <- (cmts$sentiment * cmts$likes_count)
cmts$sentiment <- sapply(cmts$message, "get_sentiment")
cmts$weighted_sentiment <- (cmts$sentiment * cmts$likes_count)
library(ggplot2)
ggplot(cmts, aes(x = date, y = weighted_sentiment)) + geom_line() +
theme_bw() + theme(axis.title.x = element_blank())
cmts <- loadComments("BallderWU", token, '2016/01/01', '2017/04/01')
cmts$sentiment <- sapply(cmts$message, "get_sentiment")
cmts$weighted_sentiment <- (cmts$sentiment * cmts$likes_count)
ggplot(cmts, aes(x = date, y = weighted_sentiment)) + geom_line() +
theme_bw() + theme(axis.title.x = element_blank())
cmts <- loadComments("oehwu", token, '2016/01/01', '2017/04/01')
cmts$sentiment <- sapply(cmts$message, "get_sentiment")
cmts$weighted_sentiment <- (cmts$sentiment * cmts$likes_count)
ggplot(cmts, aes(x = date, y = weighted_sentiment)) + geom_line() +
theme_bw() + theme(axis.title.x = element_blank())
ggplot(cmts, aes(x = date, y = weighted_sentiment)) + geom_line()
ggplot(cmts, aes(date, weighted_sentiment)) + geom_line()
ggplot(cmts, aes(date, weighted_sentiment)) + geom_line() + scale_x_datetime(labels = date_format("%H:%M:%S"))
library(scales)
ggplot(cmts, aes(date, weighted_sentiment)) + geom_line() + scale_x_datetime(labels = date_format("%H:%M:%S"))
cmts$sentiment <- sapply(cmts$message, "get_sentiment")
cmts$weighted_sentiment <- (cmts$sentiment * cmts$likes_count)
ggplot(cmts, aes(date, weighted_sentiment)) + geom_line()
ggplot(cmts, aes(date, weighted_sentiment)) + geom_line() + scale_x_datetime(labels = date_format("%m"))
str(cmts)
?class
sapply(cmts, class)
str(cmts)
loadComments <- function(page, token, since, until){
all_comments <- data.frame(row.names = c("from_id", "from_name", "message"))
## load posts
page <- getPage(page, token, n = 5000, since, until)
for(id in page$id){
post_comments <- getPost(id, token, n = 1000, likes = FALSE, comments = TRUE)$comments
post_comments$message <- iconv(post_comments$message, sub = "byte")
post_comments$datetime <- sapply(post_comments$created_time, function(x) format(as.POSIXct(x, format = "%Y-%m-%dT%H:%M:%S+0000", tz = "GMT"), "%Y-%m-%d") )
all_comments <- rbind(all_comments, post_comments)
}
all_comments
}
#  BallderWU
cmts <- loadComments("oehwu", token, '2016/01/01', '2017/04/01')
# token generated here: https://developers.facebook.com/tools/explorer
token <- 'EAACEdEose0cBAKrkP3xq2MJTGVEL6gH671AHbFueqRzbZAj2qZALBuG9feh1XMg9brwnggG0JfNjbGD0Nx5O4Tjx9460elBBFbWcXIaZC9B3m9JbkC1g6PFUsNRTGXWyWZCMojDDCOI2fgW9kwbhZBxZCGrq8kI6X4BYIxgi74M0j8PZB2ZBYGKZC01pDb2SZABssZD'
get_sentiment <- function (text){
a <- syuzhet::get_sentiment(text, method = "afinn")
s <- syuzhet::get_sentiment(text, method = "syuzhet")
b <- syuzhet::get_sentiment(text, method = "bing")
n <- syuzhet::get_sentiment(text, method = "nrc")
m <- mean(c(a, s, b, n), na.rm=TRUE)
if (is.numeric(m) & !is.na(m)){
return(m)
}
return(0.0)
}
loadComments <- function(page, token, since, until){
all_comments <- data.frame(row.names = c("from_id", "from_name", "message"))
## load posts
page <- getPage(page, token, n = 5000, since, until)
for(id in page$id){
post_comments <- getPost(id, token, n = 1000, likes = FALSE, comments = TRUE)$comments
post_comments$message <- iconv(post_comments$message, sub = "byte")
post_comments$datetime <- sapply(post_comments$created_time, function(x) format(as.POSIXct(x, format = "%Y-%m-%dT%H:%M:%S+0000", tz = "GMT"), "%Y-%m-%d") )
all_comments <- rbind(all_comments, post_comments)
}
all_comments
}
#  BallderWU
cmts <- loadComments("oehwu", token, '2016/01/01', '2017/04/01')
cmts$sentiment <- sapply(cmts$message, "get_sentiment")
cmts$weighted_sentiment <- (cmts$sentiment * cmts$likes_count)
ggplot(cmts, aes(date, weighted_sentiment)) + geom_line() + scale_x_datetime(labels = date_format("%m"))
ggplot(cmts, aes(datetime, weighted_sentiment)) + geom_line() + scale_x_datetime(labels = date_format("%m"))
ggplot(cmts, aes(datetime, weighted_sentiment)) + geom_line()
library(dplyr)
install.packages("dplyr")
ggplot(cmts, aes(datetime, weighted_sentiment)) + geom_line() + scale_x_date(date_labels = "%b %d")
?as.Date
loadComments <- function(page, token, since, until){
all_comments <- data.frame(row.names = c("from_id", "from_name", "message"))
## load posts
page <- getPage(page, token, n = 5000, since, until)
for(id in page$id){
post_comments <- getPost(id, token, n = 1000, likes = FALSE, comments = TRUE)$comments
post_comments$message <- iconv(post_comments$message, sub = "byte")
post_comments$datetime <- sapply(post_comments$created_time, function(x) as.Date(as.POSIXct(x, format = "%Y-%m-%dT%H:%M:%S+0000", tz = "GMT")) )
all_comments <- rbind(all_comments, post_comments)
}
all_comments
}
cmts <- loadComments("oehwu", token, '2016/01/01', '2017/04/01')
cmts$sentiment <- sapply(cmts$message, "get_sentiment")
cmts$weighted_sentiment <- (cmts$sentiment * cmts$likes_count)
ggplot(cmts, aes(datetime, weighted_sentiment)) + geom_line() + scale_x_date(date_labels = "%b %d")
?as.POSIXct
cmts %>% mutate(
# remove special chars
message = iconv(message, sub = "byte"),
datetime = as.POSIXct(created_time, format = "%Y-%m-%dT%H:%M:%S+0000", tz = "GMT")
)
library(dplyr)
cmts %>% mutate(
# remove special chars
message = iconv(message, sub = "byte"),
datetime = as.POSIXct(created_time, format = "%Y-%m-%dT%H:%M:%S+0000", tz = "GMT")
)
cmts %>% mutate(
# remove special chars
message = iconv(message, sub = "byte"),
datetime = as.POSIXct(created_time, format = "%Y-%m-%dT%H:%M:%S+0000", tz = "GMT"),
sentiment = get_sentiment(message),
weighted_sentiment = sentiment * likes_count
)
comments_raw <- cmts
comments <- comments_raw %>% mutate(
# remove special chars
message = iconv(message, sub = "byte"),
datetime = as.POSIXct(created_time, format = "%Y-%m-%dT%H:%M:%S+0000", tz = "GMT"),
sentiment = get_sentiment(message),
weighted_sentiment = sentiment * likes_count
)
comments <- comments_raw %>% transmute(
# remove special chars
message = iconv(message, sub = "byte"),
datetime = as.POSIXct(created_time, format = "%Y-%m-%dT%H:%M:%S+0000", tz = "GMT"),
sentiment = get_sentiment(message),
weighted_sentiment = sentiment * likes_count
)
View(comments)
comments <- comments_raw %>% transmute(
# remove special chars
message = iconv(message, sub = "byte"),
datetime = as.POSIXct(created_time, format = "%Y-%m-%dT%H:%M:%S+0000", tz = "GMT"),
sentiment = sapply(message, "get_sentiment"),
weighted_sentiment = sentiment * likes_count
)
ggplot(cmts, aes(datetime, weighted_sentiment)) + geom_line() + scale_x_date(date_labels = "%b %d")
ggplot(cmts, aes(datetime, weighted_sentiment)) + geom_line()
ggplot(cmts, aes(datetime, weighted_sentiment)) + geom_line() + scale_x_datetime(date_labels = "%b %d")
str(comments)
ggplot(comments, aes(datetime, weighted_sentiment)) + geom_line() + scale_x_datetime(date_labels = "%b %d")
comments <- comments_raw %>% transmute(
# remove special chars
message = iconv(message, sub = "byte"),
datetime = as.POSIXct(created_time, format = "%Y-%m-%dT%H:%M:%S+0000", tz = "GMT"),
sentiment = sapply(message, "get_sentiment"),
weighted_sentiment = sentiment * likes_count,
likes_count = likes_count
)
ggplot(comments, aes(datetime, weighted_sentiment)) + geom_smooth() + scale_x_datetime(date_labels = "%b %d")
line
ggplot(comments, aes(datetime, weighted_sentiment)) + geom_line() + scale_x_datetime(date_labels = "%b %d")
ggplot(comments, aes(datetime, weighted_sentiment)) +
geom_smooth(method = 'lm', aes(fill = 'confidence'), alpha = 0.5) +
geom_line() + scale_x_datetime(date_labels = "%b %d")
?geom_smooth
ggplot(comments, aes(datetime, weighted_sentiment)) +
geom_smooth(method = 'lm', aes(fill = 'confidence'), level=0.99, alpha = 0.5) +
geom_line() + scale_x_datetime(date_labels = "%b %d")
comments <- comments_raw %>% transmute(
# remove special chars
message = iconv(message, sub = "byte"),
datetime = as.POSIXct(created_time, format = "%Y-%m-%dT%H:%M:%S+0000", tz = "GMT"),
sentiment = sapply(message, "get_sentiment"),
weighted_sentiment = sentiment * likes_count,
likes_count = likes_count
) %>% filter(likes_count > 0)
ggplot(comments, aes(datetime, weighted_sentiment)) +
geom_smooth(method = 'lm', aes(fill = 'confidence'), level=0.99, alpha = 0.5) +
geom_line() + scale_x_datetime(date_labels = "%b %d")
ggplot(comments, aes(datetime, weighted_sentiment)) +
geom_smooth(aes(fill = 'confidence'), level=0.99, alpha = 0.5) +
geom_line() + scale_x_datetime(date_labels = "%b %d")
ggplot(comments, aes(datetime, weighted_sentiment)) +
geom_smooth(aes(fill = 'confidence'), level=0.99, alpha = 0.5) +
geom_point() + scale_x_datetime(date_labels = "%b %d")
comments <- comments_raw %>% transmute(
# remove special chars
message = iconv(message, sub = "byte"),
datetime = as.POSIXct(created_time, format = "%Y-%m-%dT%H:%M:%S+0000", tz = "GMT"),
sentiment = sapply(message, "get_sentiment"),
weighted_sentiment = sentiment * likes_count,
likes_count = likes_count,
scores(weighted_sentiment, type="chisq", prob=0.9)
) %>% filter(likes_count > 0)
library(outliers)
install.packages(outliers)
install.packages("outliers")
library(outliers)
comments <- comments_raw %>% transmute(
# remove special chars
message = iconv(message, sub = "byte"),
datetime = as.POSIXct(created_time, format = "%Y-%m-%dT%H:%M:%S+0000", tz = "GMT"),
sentiment = sapply(message, "get_sentiment"),
weighted_sentiment = sentiment * likes_count,
likes_count = likes_count,
scores(weighted_sentiment, type="chisq", prob=0.9)
) %>% filter(likes_count > 0)
comments <- comments_raw %>% transmute(
# remove special chars
message = iconv(message, sub = "byte"),
datetime = as.POSIXct(created_time, format = "%Y-%m-%dT%H:%M:%S+0000", tz = "GMT"),
sentiment = sapply(message, "get_sentiment"),
weighted_sentiment = sentiment * likes_count,
likes_count = likes_count,
outlier = scores(weighted_sentiment, type="chisq", prob=0.9)
) %>% filter(likes_count > 0)
ggplot(comments, aes(datetime, weighted_sentiment)) +
geom_smooth(aes(fill = 'confidence'), level=0.99, alpha = 0.5) +
geom_point() + scale_x_datetime(date_labels = "%b %d")
ggplot(comments, aes(datetime, weighted_sentiment), color=outlier) +
geom_point() + scale_x_datetime(date_labels = "%b %d")
ggplot(comments, aes(datetime, weighted_sentiment, color=outlier)) +
geom_point() + scale_x_datetime(date_labels = "%b %d")
ggplot(comments, aes(datetime, weighted_sentiment, color=outlier)) +
geom_line() +
geom_point() + scale_x_datetime(date_labels = "%b %d")
ggplot(comments, aes(datetime, weighted_sentiment)) +
geom_line() +
geom_point(aes(color=outlier)) + scale_x_datetime(date_labels = "%b %d")
ggplot(comments, aes(datetime, weighted_sentiment)) +
geom_line(aes(alpha=0.5)) +
geom_point(aes(color=outlier)) + scale_x_datetime(date_labels = "%b %d")
ggplot(comments, aes(datetime, weighted_sentiment)) +
geom_line(aes(alpha=0.2)) +
geom_point(aes(color=outlier)) + scale_x_datetime(date_labels = "%b %d")
ggplot(comments, aes(datetime, weighted_sentiment)) +
geom_line(alpha=0.2) +
geom_point(aes(color=outlier)) + scale_x_datetime(date_labels = "%b %d")
ggplot(comments, aes(datetime, weighted_sentiment)) +
geom_line(alpha=0.2) +
geom_point(aes(color=outlier, size=likes_count)) + scale_x_datetime(date_labels = "%b %d")
comments <- comments_raw %>% transmute(
# remove special chars
message = iconv(message, sub = "byte"),
datetime = as.POSIXct(created_time, format = "%Y-%m-%dT%H:%M:%S+0000", tz = "GMT"),
sentiment = sapply(message, "syuzhet::get_sentiment"),
weighted_sentiment = sentiment * likes_count,
likes_count = likes_count,
outlier = outliers::scores(weighted_sentiment, type="chisq", prob=0.9)
) %>% filter(likes_count > 0)
library(syuzhet)
comments <- comments_raw %>% transmute(
# remove special chars
message = iconv(message, sub = "byte"),
datetime = as.POSIXct(created_time, format = "%Y-%m-%dT%H:%M:%S+0000", tz = "GMT"),
sentiment = sapply(message, "get_sentiment"),
weighted_sentiment = sentiment * likes_count,
likes_count = likes_count,
outlier = outliers::scores(weighted_sentiment, type="chisq", prob=0.9)
) %>% filter(likes_count > 0)
ggplot(comments, aes(datetime, weighted_sentiment)) +
geom_line(alpha=0.2) +
geom_point(aes(color=outlier, size=likes_count)) + scale_x_datetime(date_labels = "%b %d")
comments <- comments_raw %>% transmute(
# remove special chars
message = iconv(message, sub = "byte"),
datetime = as.POSIXct(created_time, format = "%Y-%m-%dT%H:%M:%S+0000", tz = "GMT"),
sentiment = sapply(message, syuzhet::get_sentiment),
weighted_sentiment = sentiment * likes_count,
likes_count = likes_count,
outlier = outliers::scores(weighted_sentiment, type="chisq", prob=0.9)
) %>% filter(likes_count > 0)
ggplot(comments, aes(datetime, weighted_sentiment)) +
geom_line(alpha=0.2) +
geom_point(aes(color=outlier, size=likes_count)) + scale_x_datetime(date_labels = "%b %d")
comments_raw <- loadComments("BallderWU", token, '2016/01/01', '2017/04/01')
token <- 'EAACEdEose0cBAKgAA14sukObKXWlSassZBx3DRc3xL7oiwNQuyK9I1L3OoGRnGmc9AfjHDFgOWClsLCOZBkHM0zj25vBYjXIVa2Pv1DW4Cvg83mKux3HBhE4t5XZA1DFwnN7m7e2NhF9D7xZAiVaVWAxk0DHdrEZC3EG9LPIrZBfShNqDfjIc6HXvWER9nTxgZD'
comments_raw <- loadComments("BallderWU", token, '2016/01/01', '2017/04/01')
comments <- comments_raw %>% transmute(
# remove special chars
message = iconv(message, sub = "byte"),
datetime = as.POSIXct(created_time, format = "%Y-%m-%dT%H:%M:%S+0000", tz = "GMT"),
sentiment = sapply(message, syuzhet::get_sentiment),
weighted_sentiment = sentiment * likes_count,
likes_count = likes_count,
outlier = outliers::scores(weighted_sentiment, type="chisq", prob=0.9)
) %>% filter(likes_count > 0)
ggplot(comments, aes(datetime, weighted_sentiment)) +
geom_line(alpha=0.2) +
geom_point(aes(color=outlier, size=likes_count)) + scale_x_datetime(date_labels = "%b %d")
knitr::opts_chunk$set(echo = TRUE)
install.packages(c("Rfacebook", "syuzhet","ggplot2", "outliers"))
token <- 'EAACEdEose0cBAKCdZCTIE6k3UZBv3TYvIvTwLIcbjy56YY9hd3GZBZAc8GmSZAukFZBfZAZBQBGKL8NikWRGXzpfQ0WSWmhnp4Tsso7EDYlJou0tmXe3NkXBUD6I5O4e8AN609gpjZC0MPRfiVxhHhORaujTZAT0x2vAfkgANGFgiZCpEdlBPOf7XkrAILtGZBxasTcZD'
loadComments <- function(page, token, since, until){
# empty dataframe
all_comments <- data.frame(row.names = c("from_id", "from_name", "message"))
# load posts (max. 5000)
page <- getPage(page, token, n = 5000, since, until)
# load all comments for the given posts
for(id in page$id){
# extract just comments and ignore the rest
post_comments <- getPost(id, token, n = 1000, likes = FALSE, comments = TRUE)$comments
all_comments <- rbind(all_comments, post_comments)
}
return(all_comments)
}
comments_raw <- loadComments("oehwu", token, '2016/01/01', '2017/04/01')
comments <- comments_raw %>% transmute(
# remove special chars
message = iconv(message, sub = "byte"),
# convert date string to timestamp
datetime = as.POSIXct(created_time, format = "%Y-%m-%dT%H:%M:%S+0000", tz = "GMT"),
# predict sentiment
sentiment = sapply(message, syuzhet::get_sentiment),
# the following weighted sentiment value will be used to measure the impact
weighted_sentiment = sentiment * likes_count,
# attention, obvious tip: the outliers package provides some methods to find outliers :)
outlier = outliers::scores(weighted_sentiment, type="chisq", prob=0.9),
likes_count = likes_count
# we will drop all comments without "approval" to remove noise
) %>% filter(likes_count > 0)
ggplot(comments, aes(datetime, weighted_sentiment)) +
geom_line(alpha=0.2) +
geom_point(aes(color=outlier, size=likes_count)) +
scale_x_datetime(date_labels = "%b %d")
ggplot(comments, aes(datetime, weighted_sentiment)) +
geom_line(alpha=0.2) +
geom_point(aes(color=outlier, size=likes_count)) + scale_x_datetime(date_labels = "%b %d")
ggplot(comments, aes(datetime, weighted_sentiment)) +
geom_line(alpha=0.2) +
geom_point(aes(color=outlier, size=likes_count)) + scale_x_datetime(date_labels = "%b %d")
library(ggplot2)
ggplot(comments, aes(datetime, weighted_sentiment)) +
geom_line(alpha=0.2) +
geom_point(aes(color=outlier, size=likes_count)) + scale_x_datetime(date_labels = "%b %d")
